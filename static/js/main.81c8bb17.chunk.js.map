{"version":3,"sources":["webpack:///./src/css/App.scss?4aca","img/jp-logo.png","css/App.scss","components/Header/Header.js","components/Post/Post.js","components/PostList/PostList.js","components/UserDetails/UserDetails.js","App.js","serviceWorker.js","index.js"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","p","push","Header","_ref","userOptions","userValue","react_default","a","createElement","className","src","logo","alt","Post","title","body","numComments","PostList","state","loadedPosts","_this2","this","props","userSelected","userId","id","axios","get","then","response","setState","data","console","log","post","style","textAlign","map","components_Post_Post","key","Component","UserDetails","name","username","email","address","phone","website","company","href","target","rel","App","isLoading","users","error","handleChange","e","_this","value","res","_this$state","user","find","userSelectedDetails","components_UserDetails_UserDetails","street","suite","city","zipcode","catchPhrase","components_Header_Header","onChange","components_PostList_PostList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81c8bb17.chunk.js","sourcesContent":["\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js??ref--5-2!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-5-0!../../node_modules/css-loader/index.js??ref--7-oneOf-5-1!../../node_modules/postcss-loader/src/index.js??postcss!../../node_modules/sass-loader/lib/loader.js??ref--7-oneOf-5-3!./App.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js??ref--5-2!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-5-0!../../node_modules/css-loader/index.js??ref--7-oneOf-5-1!../../node_modules/postcss-loader/src/index.js??postcss!../../node_modules/sass-loader/lib/loader.js??ref--7-oneOf-5-3!./App.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js??ref--5-2!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-5-0!../../node_modules/css-loader/index.js??ref--7-oneOf-5-1!../../node_modules/postcss-loader/src/index.js??postcss!../../node_modules/sass-loader/lib/loader.js??ref--7-oneOf-5-3!./App.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = __webpack_public_path__ + \"static/media/jp-logo.415c4e22.png\";","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","import React from 'react';\nimport '../../css/App.scss';\nimport logo from '../../img/jp-logo.png';\n\nconst Header = ({userOptions, userValue}) => {\n    return(\n        <div className=\"header\">\n            <div className=\"nav\">\n                <div>\n                    <img className=\"logo\" src={logo} alt=\"JSON Place Logo\"/>\n                </div> \n            </div>\n            <div className=\"headerImage\"></div>\n        </div>\n    )\n}\n\nexport default Header; ","import React from 'react';\n\nconst Post = ({title, body, numComments}) => {\n    return (\n        <div className=\"post\">\n            <h3>{title}</h3>\n            <p>{body}</p> \n            {/* <p>{numComments.length} Comments</p> */}\n        </div>\n    )\n}\n\nexport default Post;  ","import React, {Component} from 'react';\nimport axios from 'axios';\n\nimport Post from '../Post/Post';\n\nclass PostList extends Component {\n    state = {\n        loadedPosts: null\n    }\n\n    componentDidUpdate () {\n        if(this.props.userSelected) {\n            if(!this.state.loadedPosts || (this.state.loadedPosts && this.state.loadedPosts.userId !== this.props.userSelected.id) )  {\n                axios.get('https://jsonplaceholder.typicode.com/users/' + this.props.userSelected.id + '/posts') \n                    .then(response => {\n                        this.setState({loadedPosts: response.data})\n                    })\n            }\n        }\n    }\n    render() {\n        const {loadedPosts} = this.state;\n        console.log(loadedPosts)\n\n        let post = null;\n\n        if (this.props.userSelected) {\n            post = (\n                <p style={{textAlign: 'center'}}>Loading...!</p>\n            )\n        }\n\n        if (loadedPosts) {\n            post = loadedPosts.map(post => {\n                return <Post key={post.title} title={post.title} body={post.body} />\n            })\n        }\n\n        return (\n            <div>\n                {post}\n            </div>\n        )\n    }\n}\n\nexport default PostList;","import React from 'react';\n\nconst UserDetails = ({\n        name, \n        username, \n        email, \n        address, \n        phone, \n        website, \n        company\n    }) => {\n\n    return (\n        <div className=\"user-details-card\">\n            <div>\n                <h3>{name}</h3>\n                <span>{username}</span>\n            </div>\n            <div>\n                <ul>\n                    <li>\n                        Email: <a href={'mailto:' + email}> {email} </a>\n                    </li>\n                    <li>\n                        Address: {address}\n                    </li>\n                    <li>\n                        Phone: <a href={'tel:' + phone} > {phone} </a>\n                    </li>\n                    <li>\n                        Website: <a href={'http://' + website} target=\"_blank\" rel=\"noopener noreferrer\">{website}</a>\n                    </li>\n                    <li>\n                        Company: {company}\n                    </li>\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default UserDetails;","import React, { Component } from 'react';\nimport './css/App.scss';\nimport axios from 'axios';\nimport Header from './components/Header/Header'\nimport PostList from './components/PostList/PostList';\nimport UserDetails from './components/UserDetails/UserDetails';\n\nclass App extends Component {\n  state = {\n    isLoading: true,\n    users: [],\n    error: null,\n    userValue: 'Leanne Graham'\n  }\n\n  componentDidMount () {\n    axios.get('https://jsonplaceholder.typicode.com/users')\n      .then(res => {\n        const users = res.data\n        this.setState({users})\n      });\n  }\n\n  handleChange = (e) => {\n    // const updatedUserValue = e.target.value;\n    this.setState({userValue: e.target.value})\n  }\n\n  render() {\n    const {users, userValue} = this.state;\n\n    const userOptions = users.map(user => {\n      return <option key={user.id} value={user.name}>{user.name}</option>\n    });\n\n    const userSelected = users.find(user => user.name === userValue);\n\n    let userSelectedDetails = null;\n\n    if (userSelected) {\n      userSelectedDetails = (\n        <UserDetails \n          name={userSelected.name}\n          username={userSelected.username}\n          email={userSelected.email}\n          address={userSelected.address.street + ' ' + userSelected.address.suite + ', ' + userSelected.address.city + ' ' + userSelected.address.zipcode}\n          phone={userSelected.phone}\n          website={userSelected.website}\n          company={userSelected.company.name + ' (' + userSelected.company.catchPhrase + ')'}\n        />\n      )\n    }\n\n    console.log(userValue)\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <form className=\"user-select\">\n          <label>\n            Select a User: &nbsp;\n            <select value={userValue} onChange={this.handleChange}> \n                {userOptions}\n            </select>\n          </label>\n        </form>\n        <main className=\"main\">\n          <PostList \n            userSelected={userSelected}\n          />\n        </main>\n        <aside className=\"sidebar\">\n          {userSelectedDetails}\n        </aside>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}